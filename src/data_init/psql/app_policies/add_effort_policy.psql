/*
-- https://satoricyber.com/postgres-security/postgres-row-level-security/#:~:text=What%20is%20Postgres%20Row%20Level,for%20one%20or%20more%20roles.
-- row level security for app_user
-- insert, update, delete
-- effort table has two column unique_index for upsert.

Adds row level permissions.

Use views to create permissions.

*/
-- ALTER TABLE part ENABLE ROW LEVEL SECURITY;
CREATE POLICY insert_effort on provider_effort.effort TO app_user
FOR INSERT WITH CHECK (

)

CREATE POLICY update_effort on provider_effort.effort TO app_user
FOR UPDATE USING (
  
)

CREATE POLICY delete_effort on provider_effort.effort TO app_user
FOR UPDATE USING (
  EXISTS( )
  
)




CREATE POLICY insert_effort ON part
   FOR INSERT TO PUBLIC
   WITH CHECK (EXISTS(
                  SELECT 1
                  FROM provider_effort.company_cost_center as pcc
                  INNER JOIN provider_effort.cost_center on  provider_effort.cost_center_id = pcc.cost_center_id
                  WHERE pcc.id = company_cost_center_id

              ));

-- CREATE TABLE provider_effort.appointments (
--     id bigserial PRIMARY KEY,
--     provider_id bigint REFERENCES provider_effort.providers,
--     cpsc_id bigint REFERENCES provider_effort.cpsc (id),
--     lcg_id  bigint REFERENCES provider_effort.lcg  (id),
--     company_cost_center_id bigint REFERENCES provider_effort.company_cost_center (id),
--     start_date date,
--     end_date   date,
--     created_at timestamptz default now(),
--     updated_at timestamptz default now(),
--     last_modified_userid   bigint  DEFAULT app_userid(),
--     UNIQUE( provider_id, company_cost_center_id)
-- );